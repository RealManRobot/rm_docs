import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.DpFyhY0e.js";const p="/assets/ForceControl_trajectory.BCHAGy-e.png",F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"robot/demo/c/RMDemo_ForceControl/readme.md","filePath":"robot/demo/c/RMDemo_ForceControl/readme.md","lastUpdated":null}'),l={name:"robot/demo/c/RMDemo_ForceControl/readme.md"},t=n(`<h2 id="_1-项目介绍" tabindex="-1"><strong>1. 项目介绍</strong> <a class="header-anchor" href="#_1-项目介绍" aria-label="Permalink to &quot;**1. 项目介绍**&quot;">​</a></h2><p>本项目是一个使用睿尔曼 C开发包完成工程完成机械臂连接、机械臂版本获取、API版本获取、movej运动、moveL运动、开始六维力力控movel直线运动，并在力控下轨迹向下，之后关闭力控断开连接。</p><h2 id="_2-代码结构" tabindex="-1"><strong>2. 代码结构</strong> <a class="header-anchor" href="#_2-代码结构" aria-label="Permalink to &quot;**2. 代码结构**&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>RMDemo_ForceControl/</span></span>
<span class="line"><span>├── build/                  # CMake构建生成的输出目录（如Makefile、构建文件等）</span></span>
<span class="line"><span>├── cmake/                  # CMake模块和脚本的存放目录</span></span>
<span class="line"><span>│   ├── FindMyLib.cmake     # 自定义的Find模块，用于查找外部库</span></span>
<span class="line"><span>├── data/</span></span>
<span class="line"><span>│   └── robot_log.txt          # 日志、轨迹文件等数据文件目录（在执行过程中生成）</span></span>
<span class="line"><span>├── include/                # 自定义头文件存放目录</span></span>
<span class="line"><span>├── Robotic_Arm/               睿尔曼机械臂二次开发包</span></span>
<span class="line"><span>│   ├── include/</span></span>
<span class="line"><span>│   │   ├── rm_define.h        # 机械臂的定义</span></span>
<span class="line"><span>│   │   └── rm_interface.h     # 机械臂 API 的接口头文件</span></span>
<span class="line"><span>│   └── lib/</span></span>
<span class="line"><span>│       ├── api_c.dll          # Windows 的 API 库</span></span>
<span class="line"><span>│       ├── api_c.lib          # Windows 的 API 库</span></span>
<span class="line"><span>│       └── libapi_c.so        # Linux 的 API 库</span></span>
<span class="line"><span>├── src/                     # 源文件存放目录</span></span>
<span class="line"><span>│   ├── main.c #             主要功能的源文件</span></span>
<span class="line"><span>├── run.bat                   # 快速运行脚本， Windows为bat脚本</span></span>
<span class="line"><span>├── run.sh                   # 快速运行脚本， linux为shell脚本</span></span>
<span class="line"><span>├── CMakeLists.txt           # 项目的顶层CMake配置文件</span></span>
<span class="line"><span>├── README.md                # 为示例工程提供详细的文档</span></span></code></pre></div><h2 id="_3-系统要求" tabindex="-1"><strong>3. 系统要求</strong> <a class="header-anchor" href="#_3-系统要求" aria-label="Permalink to &quot;**3. 系统要求**&quot;">​</a></h2><ul><li>操作系统：Ubuntu 18.04或更高版本</li><li>编译器：GCC 7.5或更高版本 (或任何其他兼容的C编译器)</li><li>依赖库： <ul><li>CMake 3.10或更高版本</li><li>RMAPI库(包含在 <code>Robotic_Arm/lib</code>目录中)</li></ul></li></ul><h2 id="_4-安装说明" tabindex="-1"><strong>4. 安装说明</strong> <a class="header-anchor" href="#_4-安装说明" aria-label="Permalink to &quot;**4. 安装说明**&quot;">​</a></h2><ol><li><p>克隆项目到本地：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div></li><li><p>构建项目： Linux下： cmake:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span></span></code></pre></div><p>如果是GC编译的话 ：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 编译并链接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> gcc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I./Robotic_Arm/include</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L./Robotic_Arm/lib</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Wl,-rpath=./Robotic_Arm/lib</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> demo_force_control</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/demo_force_control.c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/utils.c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/main.c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lapi_c</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 检查编译是否成功</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$?</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -eq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 设置LD_LIBRARY_PATH环境变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LD_LIBRARY_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$LD_LIBRARY_PATH:./Robotic_Arm/lib</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 运行编译后的可执行文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ./demo_force_control</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;编译失败&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> fi</span></span></code></pre></div></li></ol><h2 id="_5-注意事项" tabindex="-1"><strong>5. 注意事项</strong> <a class="header-anchor" href="#_5-注意事项" aria-label="Permalink to &quot;**5. 注意事项**&quot;">​</a></h2><p>该Demo以RM65-B型号机械臂为例，请根据实际情况修改代码中的数据。</p><h2 id="_6-使用指南" tabindex="-1"><strong>6. 使用指南</strong> <a class="header-anchor" href="#_6-使用指南" aria-label="Permalink to &quot;**6. 使用指南**&quot;">​</a></h2><h3 id="_6-1-快速运行" tabindex="-1"><strong>6.1. 快速运行</strong> <a class="header-anchor" href="#_6-1-快速运行" aria-label="Permalink to &quot;**6.1. 快速运行**&quot;">​</a></h3><p>按照以下步骤快速运行代码：</p><ol><li><p><strong>配置机械臂IP地址</strong>：打开 <code>demo_force_control.c</code> 文件，在 <code>main</code> 函数中修改 <code>robot_ip_address</code> 类的初始化参数为当前机械臂的IP地址，默认IP地址为 <code>&quot;192.168.1.18&quot;</code>。</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">robot_ip_address </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;192.168.1.18&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> robot_port </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rm_robot_handle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">robot_handle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rm_create_robot_arm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(robot_ip_address, robot_port);</span></span></code></pre></div></li><li><p><strong>命令行运行</strong>：在终端进入 <code>RMDemo_ForceControl</code> 目录，输入以下命令运行C程序： 2.1 Linux下</p></li></ol><ul><li><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ./run.sh</span></span></code></pre></div></li></ul><p>2.2 Windows下: 双击运行 run.bat</p><h3 id="_6-2-代码说明" tabindex="-1"><strong>6.2. 代码说明</strong> <a class="header-anchor" href="#_6-2-代码说明" aria-label="Permalink to &quot;**6.2. 代码说明**&quot;">​</a></h3><p>下面是 <code>demo_force_control.c</code> 文件的主要功能：</p><ul><li><p><strong>连接机械臂</strong></p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rm_robot_handle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">robot_handle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rm_create_robot_arm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(robot_ip_address, robot_port);</span></span></code></pre></div><p>连接到指定IP和端口的机械臂。</p></li><li><p><strong>获取API版本</strong></p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api_version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rm_api_version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;API Version: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, api_version);</span></span></code></pre></div><p>获取并显示API版本。</p></li><li><p><strong>执行movej运动</strong></p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> joint_angles_start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">movej</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(robot_handle, joint_angles_start, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li><li><p><strong>执行movej_p运动</strong></p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rm_pose_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start_pose </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.141</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} };</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">movej_p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(robot_handle, start_pose, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li><li><p><strong>启用力控制模式</strong></p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_force_position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(robot_handle, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li><li><p><strong>执行movel运动</strong></p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">movel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(robot_handle, start_pose, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li><li><p><strong>停止力控制模式</strong></p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stop_force_position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(robot_handle);</span></span></code></pre></div></li><li><p><strong>断开机械臂连接</strong></p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disconnect_robot_arm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(robot_handle);</span></span></code></pre></div></li></ul><h3 id="_6-3-运行结果示例" tabindex="-1"><strong>6.3. 运行结果示例</strong> <a class="header-anchor" href="#_6-3-运行结果示例" aria-label="Permalink to &quot;**6.3. 运行结果示例**&quot;">​</a></h3><p>运行脚本后，输出结果如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>INFO: rm_init: Operation successful</span></span>
<span class="line"><span>API Version: 0.3.0.</span></span>
<span class="line"><span>Robot handle created successfully: 1</span></span>
<span class="line"><span>Current arm_dof: 6</span></span>
<span class="line"><span>Successfully obtained the current state of the robot arm.</span></span>
<span class="line"><span>Pose: Position(0.299994, -0.000002, 0.307220), Quaternion(0.000296, 1.000000, 0.000000, 0.000000), Euler angles(3.141000</span></span>
<span class="line"><span>, 0.000000, 0.000000)</span></span>
<span class="line"><span>Joint angle array: [0.015000, -21.037001, -76.683998, -0.032000, -82.278000, 0.026000]</span></span>
<span class="line"><span>Robot arm error code: 0</span></span>
<span class="line"><span>Controller error code: 0</span></span>
<span class="line"><span>INFO: movej: Operation successful</span></span>
<span class="line"><span>INFO: movej_p: Operation successful</span></span>
<span class="line"><span>INFO: set_force_position: Operation successful</span></span>
<span class="line"><span>INFO: movel: Operation successful</span></span>
<span class="line"><span>INFO: movel: Operation successful</span></span>
<span class="line"><span>INFO: stop_force_position: Operation successful</span></span>
<span class="line"><span>INFO: set_force_position: Operation successful</span></span>
<span class="line"><span>INFO: movel: Operation successful</span></span>
<span class="line"><span>INFO: movel: Operation successful</span></span>
<span class="line"><span>INFO: stop_force_position: Operation successful</span></span>
<span class="line"><span>INFO: set_force_position: Operation successful</span></span>
<span class="line"><span>INFO: movel: Operation successful</span></span>
<span class="line"><span>INFO: movel: Operation successful</span></span>
<span class="line"><span>INFO: stop_force_position: Operation successful</span></span>
<span class="line"><span>INFO: disconnect_robot_arm: Operation successful</span></span></code></pre></div><p>运行脚本后，运行轨迹从上至下如下图所示：</p><p><img src="`+p+'" alt="ForceControl_trajectory"></p><ul><li><p><strong>支持渠道</strong>：</p><ul><li>开发者论坛/社区：<a href="https://bbs.realman-robotics.cn" target="_blank" rel="noreferrer">链接地址</a></li><li></li></ul></li></ul><ul><li>API文档：详见<code>rm_interface.h</code>文件。</li></ul><h2 id="_7-许可证信息" tabindex="-1"><strong>7. 许可证信息</strong> <a class="header-anchor" href="#_7-许可证信息" aria-label="Permalink to &quot;**7. 许可证信息**&quot;">​</a></h2><ul><li>本项目遵循MIT许可证。</li></ul><h2 id="_8-常见问题解答-faq" tabindex="-1"><strong>8. 常见问题解答（FAQ）</strong> <a class="header-anchor" href="#_8-常见问题解答-faq" aria-label="Permalink to &quot;**8. 常见问题解答（FAQ）**&quot;">​</a></h2><ul><li><p><strong>Q:</strong> 如何解决编译错误？ <strong>A:</strong> 请确保您的编译器版本和依赖库满足系统要求，并按照安装说明重新配置环境。</p></li><li><p><strong>Q:</strong> 如何连接机器人？ <strong>A:</strong> 请参考示例代码中的连接步骤，确保机器人IP地址和端口正确配置。</p></li><li><p><strong>Q:</strong> 如何获取更多帮助？ <strong>A:</strong> 请在GitHub项目页面提交Issue或联系维护者。</p></li></ul>',30),e=[t];function h(k,r,o,d,c,g){return a(),i("div",null,e)}const y=s(l,[["render",h]]);export{F as __pageData,y as default};

import{_ as a,c as e,o,a3 as t}from"./chunks/framework.DpFyhY0e.js";const n="/assets/%E8%BF%9B%E5%85%A5%E6%8B%96%E5%8A%A8%E7%A4%BA%E6%95%99%E6%A8%A1%E5%BC%8F.D7_YAk-I.png",s="/assets/%E6%8E%A7%E5%88%B6%E5%99%A8_IO%E6%8E%A5%E5%8F%A3%E5%9B%BE1.DPlTxCG5.png",l="/assets/%E6%8E%A7%E5%88%B6%E5%99%A8_IO%E6%8E%A5%E5%8F%A3%E5%9B%BE2.BnQhfyPT.png",i="/assets/%E6%9C%AB%E7%AB%AF_IO%E6%8E%A5%E5%8F%A3%E5%9B%BE.CctDDUKp.png",E=JSON.parse('{"title":"机械臂IO功能使用示例IOControl","description":"","frontmatter":{},"headers":[],"relativePath":"robot/demo/python/RMDemo_IOControl/readme.md","filePath":"robot/demo/python/RMDemo_IOControl/readme.md","lastUpdated":null}'),r={name:"robot/demo/python/RMDemo_IOControl/readme.md"},p=t(`<h1 id="机械臂io功能使用示例iocontrol" tabindex="-1">机械臂IO功能使用示例IOControl <a class="header-anchor" href="#机械臂io功能使用示例iocontrol" aria-label="Permalink to &quot;机械臂IO功能使用示例IOControl&quot;">​</a></h1><hr><h2 id="_1-项目介绍" tabindex="-1">1. 项目介绍 <a class="header-anchor" href="#_1-项目介绍" aria-label="Permalink to &quot;1. 项目介绍&quot;">​</a></h2><p>本项目是一个使用睿尔曼Python开发包实现拖动示教，将轨迹保存到文件夹下，并拼接为在线编程文件，再保存至在线编程列表，设置为默认IO运行编程文件，通过IO复用模式运行、暂停、继续、急停在线编程。</p><h2 id="_2-代码结构" tabindex="-1">2. 代码结构 <a class="header-anchor" href="#_2-代码结构" aria-label="Permalink to &quot;2. 代码结构&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>RMDemo_IOControl/</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── README.md        &lt;- 项目的核心文档</span></span>
<span class="line"><span>├── requirements.txt    &lt;- 项目的依赖列表</span></span>
<span class="line"><span>├── setup.py        &lt;- 项目的安装脚本</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── src/          &lt;- 项目的源代码</span></span>
<span class="line"><span>│  ├── main.py       &lt;- 程序的主入口</span></span>
<span class="line"><span>│  └── core/        &lt;- 核心功能或业务逻辑代码</span></span>
<span class="line"><span>│    └── demo_io_control.py     &lt;- 实现拖动示教，将轨迹保存到文件夹下，并拼接为在线编程文件，再保存至在线编程列表，设置为默认IO运行编程文件，通过IO复用模式运行、暂停、继续、急停在线编程。</span></span>
<span class="line"><span>└── Robotic_Arm/      &lt;- 睿尔曼机械臂二次开发包</span></span></code></pre></div><h2 id="_3-环境与依赖" tabindex="-1">3.环境与依赖 <a class="header-anchor" href="#_3-环境与依赖" aria-label="Permalink to &quot;3.环境与依赖&quot;">​</a></h2><ul><li>Python 3.9+</li></ul><h2 id="_4-安装说明" tabindex="-1">4. 安装说明 <a class="header-anchor" href="#_4-安装说明" aria-label="Permalink to &quot;4. 安装说明&quot;">​</a></h2><ol><li><p>安装Python 3.9</p></li><li><p>进入项目目录：<code>cd RMDemo_IOControl</code></p></li><li><p>安装依赖：<code>pip install -r requirements.txt</code></p></li></ol><h2 id="_5-注意事项" tabindex="-1">5. 注意事项 <a class="header-anchor" href="#_5-注意事项" aria-label="Permalink to &quot;5. 注意事项&quot;">​</a></h2><p>该Demo以RM65-B型号机械臂为例，请根据实际情况修改代码中的数据。</p><h2 id="_6-使用指南" tabindex="-1">6. 使用指南 <a class="header-anchor" href="#_6-使用指南" aria-label="Permalink to &quot;6. 使用指南&quot;">​</a></h2><ol><li><p><strong>参数配置</strong></p><p>打开<code>demo_algo_interface.py</code> 文件，在main函数中可修改以下配置：</p><ul><li>配置要连接的机械臂IP地址（默认为<code>&quot;192.168.1.18&quot;</code>）：如果用户修改过机械臂的IP，修改<code>RobotArmController</code>类的初始化参数为机械臂当前IP。</li><li>配置文件保存至在线编程列表的id号（默认为100）：通过<code>test_id</code>参数修改文件保存至在线编程时的id。请检查在线编程列表，必要时修改该id号以确保在您的在线编程列表中该id为可用的。</li><li>配置控制器IO复用功能（默认设置为 IO1：表示开始运行在线编程文件、IO2：表示暂停运行在线编程文件、IO3：表示继续运行在线编程文件、IO4：表示急停功能）：通过<code>set_io_mode</code>方法修改每个IO端口的复用模式。</li></ul></li><li><p><strong>命令行运行</strong></p><p>在终端进入<code>RMDemo_IOControl</code>目录，输入以下命令运行Python脚本：</p></li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python ./src/main.py</span></span></code></pre></div><ol start="3"><li><p><strong>拖动机械臂进行示教</strong></p><p>当终端打印出以下信息，机械臂已进入拖动示教模式，用户可以拖动机械臂完成需要的轨迹，拖动完成后按下回车键退出拖动示教模式并保存轨迹到data文件夹下的trajectory.txt文件中。</p><p><img src="`+n+'" alt="进入拖动示教模式"></p></li><li><p><strong>通过IO复用模式控制该轨迹文件的运行、暂停、继续、急停</strong></p><p>程序运行结束后，拖动示教保存的轨迹文件已经保存到指定id的在线编程程序列表，并且设置为IO 默认运行的在线编程文件。此时，控制器IO设置为：</p><p>​ IO1：表示开始运行在线编程文件；</p><p>​ IO2：表示暂停运行在线编程文件；</p><p>​ IO3：表示继续运行在线编程文件；</p><p>​ IO4：表示急停功能；</p><p>IO为高电平触发，参考 <code>9. 控制器和末端接口图</code> 完成IO接线后，即可通过对应IO端口高电平实现相应的IO功能。</p></li></ol><ul><li><strong>支持渠道</strong>： <ul><li>开发者论坛/社区：<a href="https://bbs.realman-robotics.cn" target="_blank" rel="noreferrer">链接地址</a></li></ul></li></ul><h2 id="_7-许可证信息" tabindex="-1">7. 许可证信息 <a class="header-anchor" href="#_7-许可证信息" aria-label="Permalink to &quot;7. 许可证信息&quot;">​</a></h2><ul><li>本项目遵循MIT许可证。</li></ul><h2 id="_8-常见问题解答-faq" tabindex="-1">8. 常见问题解答（FAQ） <a class="header-anchor" href="#_8-常见问题解答-faq" aria-label="Permalink to &quot;8. 常见问题解答（FAQ）&quot;">​</a></h2><ul><li><p><strong>Q1：机械臂连接失败</strong></p><p>答案：修改过机械臂IP</p></li></ul><h2 id="_9-控制器和末端接口图" tabindex="-1">9. 控制器和末端接口图 <a class="header-anchor" href="#_9-控制器和末端接口图" aria-label="Permalink to &quot;9. 控制器和末端接口图&quot;">​</a></h2><h3 id="控制器io接口图1" tabindex="-1">控制器IO接口图1 <a class="header-anchor" href="#控制器io接口图1" aria-label="Permalink to &quot;控制器IO接口图1&quot;">​</a></h3><p><img src="'+s+'" alt="控制器_IO接口图1"></p><h3 id="控制器io接口图2" tabindex="-1">控制器IO接口图2 <a class="header-anchor" href="#控制器io接口图2" aria-label="Permalink to &quot;控制器IO接口图2&quot;">​</a></h3><p><img src="'+l+'" alt="控制器_IO接口图2"></p><h3 id="末端io接口图" tabindex="-1">末端IO接口图 <a class="header-anchor" href="#末端io接口图" aria-label="Permalink to &quot;末端IO接口图&quot;">​</a></h3><p><img src="'+i+'" alt="末端_IO接口图"></p>',28),c=[p];function d(h,_,m,u,I,O){return o(),e("div",null,c)}const g=a(r,[["render",d]]);export{E as __pageData,g as default};

import{_ as t,c as s,o as i,a3 as a}from"./chunks/framework.DpFyhY0e.js";const E=JSON.parse('{"title":"RoboticArm类","description":"","frontmatter":{},"headers":[],"relativePath":"robot/api/python/classes/roboticArm.md","filePath":"robot/api/python/classes/roboticArm.md","lastUpdated":null}'),l={name:"robot/api/python/classes/roboticArm.md"},e=a(`<h1 id="roboticarm类" tabindex="-1">RoboticArm类 <a class="header-anchor" href="#roboticarm类" aria-label="Permalink to &quot;RoboticArm类&quot;">​</a></h1><p>机械臂连接、断开、日志设置等操作。</p><h2 id="构造函数-初始化线程模式-init" tabindex="-1">构造函数：初始化线程模式<code>__init__()</code> <a class="header-anchor" href="#构造函数-初始化线程模式-init" aria-label="Permalink to &quot;构造函数：初始化线程模式\`__init__()\`&quot;">​</a></h2><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">__init__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mode: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">rm_thread_mode_e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span></code></pre></div><ul><li><strong>参数说明:</strong></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">mode</td><td style="text-align:left;"><code>rm_robot_arm_model_e</code></td><td style="text-align:left;">RM_SINGLE_MODE_E：单线程模式，单线程非阻塞等待数据返回；RM_DUAL_MODE_E：双线程模式，增加接收线程监测队列中的数据； RM_TRIPLE_MODE_E：三线程模式，在双线程模式基础上增加线程监测UDP接口数据。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div><h2 id="创建机械臂连接控制句柄rm-create-robot-arm" tabindex="-1">创建机械臂连接控制句柄<code>rm_create_robot_arm()</code> <a class="header-anchor" href="#创建机械臂连接控制句柄rm-create-robot-arm" aria-label="Permalink to &quot;创建机械臂连接控制句柄\`rm_create_robot_arm()\`&quot;">​</a></h2><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rm_create_robot_arm(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ip: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, port: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, level: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, log_func: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">CFUNCTYPE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rm_robot_handle:</span></span></code></pre></div><ul><li><strong>参数说明:</strong></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">ip</td><td style="text-align:left;"><code>str</code></td><td style="text-align:left;">机械臂的IP地址。</td></tr><tr><td style="text-align:left;">port</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">机械臂的端口号。</td></tr><tr><td style="text-align:left;">level</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">日志打印等级，默认为3。- 0: debug模式;- 1: info模式;- 2: warning模式;- 3: error模式。</td></tr><tr><td style="text-align:left;">log_func</td><td style="text-align:left;"><code>CFUNCTYPE</code></td><td style="text-align:left;">自定义日志打印函数（当前Python版本API暂不支持）。默认为None。</td></tr></tbody></table><ul><li><strong>返回值:</strong></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">/</td><td style="text-align:left;"><code>rm_robot_handle</code></td><td style="text-align:left;">机械臂句柄，其中包含机械臂id标识。</td></tr></tbody></table><ul><li><strong>使用示例</strong> 使用RoboticArm类连接和控制机械臂：</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rm_robot_interface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoboticArm</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 初始化线程模式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoboticArm(rm_thread_mode_e.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RM_TRIPLE_MODE_E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 创建RoboticArm对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> handle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arm.rm_create_robot_arm(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.1.18&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &gt;&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(handle.id) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 机械臂id标识</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 定义零位和目标位置（关节角度）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> zero_position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> target_position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 移动机械臂到零位</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arm.movej(zero_position, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 移动机械臂到目标位置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arm.movej(target_position, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 断开与机械臂的连接</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arm.rm_delete_robot_arm()</span></span></code></pre></div><h2 id="删除指定机械臂对象rm-delete-robot-arm" tabindex="-1">删除指定机械臂对象<code>rm_delete_robot_arm()</code> <a class="header-anchor" href="#删除指定机械臂对象rm-delete-robot-arm" aria-label="Permalink to &quot;删除指定机械臂对象\`rm_delete_robot_arm()\`&quot;">​</a></h2><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rm_delete_robot_arm(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><ul><li><strong>返回值:</strong></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">/</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">0表示成功，非0表示失败。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div><h2 id="关闭所有机械臂连接rm-destory" tabindex="-1">关闭所有机械臂连接<code>rm_destory()</code> <a class="header-anchor" href="#关闭所有机械臂连接rm-destory" aria-label="Permalink to &quot;关闭所有机械臂连接\`rm_destory()\`&quot;">​</a></h2><blockquote><p>销毁所有线程。</p></blockquote><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rm_destory(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><ul><li><strong>返回值:</strong></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">/</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">0表示成功，非0表示失败。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div><h2 id="保存日志到文件rm-set-log-save" tabindex="-1">保存日志到文件<code>rm_set_log_save()</code> <a class="header-anchor" href="#保存日志到文件rm-set-log-save" aria-label="Permalink to &quot;保存日志到文件\`rm_set_log_save()\`&quot;">​</a></h2><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rm_set_log_save(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, path) </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><ul><li><strong>参数说明:</strong></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">path</td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">日志保存文件路径。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div><h2 id="设置真实-仿真模式rm-set-arm-run-mode" tabindex="-1">设置真实/仿真模式<code>rm_set_arm_run_mode()</code> <a class="header-anchor" href="#设置真实-仿真模式rm-set-arm-run-mode" aria-label="Permalink to &quot;设置真实/仿真模式\`rm_set_arm_run_mode()\`&quot;">​</a></h2><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rm_set_arm_run_mode(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mode: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span></code></pre></div><ul><li><strong>参数说明:</strong></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">mode</td><td style="text-align:left;">int</td><td style="text-align:left;">模式 0:仿真 1:真实。</td></tr></tbody></table><ul><li><strong>返回值:</strong> 函数执行的状态码：</li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">成功。</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">控制器返回false，参数错误或机械臂状态发生错误。</td></tr><tr><td style="text-align:left;">-1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据发送失败，通信过程中出现问题。</td></tr><tr><td style="text-align:left;">-2</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据接收失败，通信过程中出现问题或者控制器长久没有返回。</td></tr><tr><td style="text-align:left;">-3</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">返回值解析失败，接收到的数据格式不正确或不完整。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div><h2 id="获取真实-仿真模式rm-get-arm-run-mode" tabindex="-1">获取真实/仿真模式<code>rm_get_arm_run_mode()</code> <a class="header-anchor" href="#获取真实-仿真模式rm-get-arm-run-mode" aria-label="Permalink to &quot;获取真实/仿真模式\`rm_get_arm_run_mode()\`&quot;">​</a></h2><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rm_get_arm_run_mode(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tuple[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]:</span></span></code></pre></div><ul><li><strong>返回值:</strong> tuple[int, int]: 包含两个元素的元组。</li></ul><p>1.函数执行的状态码：</p><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">成功。</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">控制器返回false，参数错误或机械臂状态发生错误。</td></tr><tr><td style="text-align:left;">-1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据发送失败，通信过程中出现问题。</td></tr><tr><td style="text-align:left;">-2</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据接收失败，通信过程中出现问题或者控制器长久没有返回。</td></tr><tr><td style="text-align:left;">-3</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">返回值解析失败，接收到的数据格式不正确或不完整。</td></tr></tbody></table><p>2.模式：</p><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">/</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">0:仿真 1:真实。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div><h2 id="获取机械臂基本信息rm-get-robot-info" tabindex="-1">获取机械臂基本信息<code>rm_get_robot_info()</code> <a class="header-anchor" href="#获取机械臂基本信息rm-get-robot-info" aria-label="Permalink to &quot;获取机械臂基本信息\`rm_get_robot_info()\`&quot;">​</a></h2><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rm_get_robot_info(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tuple[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dict[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]:</span></span></code></pre></div><ul><li><strong>返回值:</strong> tuple[int, dict[str, any]]: 包含两个元素的元组。</li></ul><p>1.函数执行的状态码：</p><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">成功。</td></tr><tr><td style="text-align:left;">-1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">未找到对应句柄,句柄为空或已被删除。</td></tr><tr><td style="text-align:left;">-2</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">获取到的机械臂基本信息非法，检查句柄是否已被删除。</td></tr></tbody></table><p>2.返回当前工具坐标系字典：</p><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">dict[str, any]</td><td style="text-align:left;"><code>str</code></td><td style="text-align:left;">返回当前工具坐标系字典，键为rm_robot_info_t结构体的字段名称。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div><h2 id="注册机械臂事件回调函数rm-get-arm-event-call-back" tabindex="-1">注册机械臂事件回调函数<code>rm_get_arm_event_call_back()</code> <a class="header-anchor" href="#注册机械臂事件回调函数rm-get-arm-event-call-back" aria-label="Permalink to &quot;注册机械臂事件回调函数\`rm_get_arm_event_call_back()\`&quot;">​</a></h2><p>当机械臂返回运动到位指令或者文件运行结束指令时会有数据返回。</p><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rm_get_arm_event_call_back(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, event_callback: rm_event_callback_ptr):</span></span></code></pre></div><ul><li><strong>参数说明:</strong></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">event_callback</td><td style="text-align:left;"><code>rm_event_callback_ptr</code></td><td style="text-align:left;">机械臂事件回调函数，该回调函数接收rm_event_push_data_t类型的数据作为参数，没有返回值。</td></tr></tbody></table><blockquote><p>注意：单线程无法使用该回调函数。</p></blockquote><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 下面是一个如何注册机械臂事件回调函数的示例：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 在这个示例中，我们定义了一个名为\`event_callback\`的函数，用于处理机械臂的事件，并将其注册为回调函数。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 当机械臂事件发生时，\`event_callback\`函数将被调用，并接收一个包含事件数据的对象作为参数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        &gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rm_robot_interface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoboticArm, rm_event_callback_ptr</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        &gt;&gt;&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> event_func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data:rm_event_push_data_t) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;The motion is complete, the arm is in place.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 判断接口类型</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data.event_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 轨迹规划完成</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">         print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;运动结果:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data.trajectory_state)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">         print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;当前设备:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data.device)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">         print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;是否连接下一条轨迹:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data.trajectory_connect)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ...</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     elif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data.codeKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在线编程文件运行完成</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">         print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;在线编程文件结束id:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data.program_id)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        &gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rm_init(rm_thread_mode_e.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RM_TRIPLE_MODE_E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        &gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoboticArm(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.1.18&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        &gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event_callback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rm_event_callback_ptr(event_func)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        &gt;&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arm.rm_get_arm_event_call_back(event_callback)</span></span></code></pre></div><h2 id="注册udp机械臂实时状态主动上报信息回调函数rm-realtime-arm-state-call-back" tabindex="-1">注册UDP机械臂实时状态主动上报信息回调函数<code>rm_realtime_arm_state_call_back()</code> <a class="header-anchor" href="#注册udp机械臂实时状态主动上报信息回调函数rm-realtime-arm-state-call-back" aria-label="Permalink to &quot;注册UDP机械臂实时状态主动上报信息回调函数\`rm_realtime_arm_state_call_back()\`&quot;">​</a></h2><p>该回调函数接收rm_realtime_arm_joint_state_t类型数据作为参数，没有返回值。当使用三线程，并且UDP机械臂状态主动上报正确配置时，数据会以设定的周期返回。</p><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rm_realtime_arm_state_call_back(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, arm_state_callback):</span></span></code></pre></div><ul><li><strong>参数说明:</strong></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">arm_state_callback</td><td style="text-align:left;"><code>rm_realtime_arm_state_callback_ptr</code></td><td style="text-align:left;">机械臂实时状态信息回调函数。</td></tr></tbody></table><blockquote><p>注意：需确保打开三线程模式，仅在三线程模式会打开UDP接口接收数据；需确保广播端口号、上报目标IP、是否主动上报等 UDP 机械臂状态主动上报配置正确；需确保防火墙不会阻止数据的接收。</p></blockquote><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div>`,87),n=[e];function h(p,k,d,r,g,o){return i(),s("div",null,n)}const c=t(l,[["render",h]]);export{E as __pageData,c as default};

import{_ as s,c as t,o as i,a3 as a}from"./chunks/framework.DpFyhY0e.js";const y=JSON.parse('{"title":"末端力传感器Force","description":"","frontmatter":{"title":"末端力传感器Force","tags":""},"headers":[],"relativePath":"robot/api/python/末端力传感器force.md","filePath":"robot/api/python/末端力传感器force.md","lastUpdated":1721379825000}'),l={name:"robot/api/python/末端力传感器force.md"},e=a(`<h1 id="末端力传感器force" tabindex="-1">末端力传感器<code>Force</code> <a class="header-anchor" href="#末端力传感器force" aria-label="Permalink to &quot;末端力传感器\`Force\`&quot;">​</a></h1><h3 id="六维力" tabindex="-1">六维力 <a class="header-anchor" href="#六维力" aria-label="Permalink to &quot;六维力&quot;">​</a></h3><p>睿尔曼机械臂六维力版末端配备集成式六维力传感器，无需外部走线，用户可直接通过协议对六维力进行操作， 获取六维力数据。如下图所示，正上方为六维力的 Z 轴，航插反方向为六维力的 Y 轴，坐标系符合右手定则。 机械臂位于零位姿态时，工具坐标系与六维力的坐标系方向一致。 另外，六维力额定力 200N，额定力矩 8Nm，过载水平 300FS，工作温度 5~80℃，准度 0.5FS。使用过程中 注意使用要求，防止损坏六维力传感器。</p><p><img src="https://boostnote.io/api/teams/HRjDJtTZR/files/c41255fb224eae8e608bec658a657c9968ff13b8693449acbcae0f955afa17d6-force.png" alt="force.png"> 六维力坐标系</p><h3 id="一维力" tabindex="-1">一维力 <a class="header-anchor" href="#一维力" aria-label="Permalink to &quot;一维力&quot;">​</a></h3><p>睿尔曼机械臂一维力版末端接口板集成了一维力传感器，可获取 Z 方向的力，量程200N，准度 0.5FS。 <img src="https://boostnote.io/api/teams/HRjDJtTZR/files/5a0cc558546cfa636f8b3ea30c24fcff4c4cf766878dce4bb265d3cbaabebc18-oneforce.png" alt="oneforce.png"> 一维力坐标系</p><p>可用于查询、配置末端力传感器等，可以查阅<a href="./../继承关系图/关节配置JointConfigSettings.html">JointConfigSettings继承关系图</a>了解与其相关的类的关系。下面是末端力传感器<code>Force</code>的详细成员函数说明，包含了方法原型、参数说明、返回值说明和使用示例。</p><hr><h2 id="查询当前六维力传感器得到的力和力矩信息-fx-fy-fz-mx-my-mzrm-get-force-data" tabindex="-1">查询当前六维力传感器得到的力和力矩信息：Fx,Fy,Fz,Mx,My,Mz<code>rm_get_force_data()</code> <a class="header-anchor" href="#查询当前六维力传感器得到的力和力矩信息-fx-fy-fz-mx-my-mzrm-get-force-data" aria-label="Permalink to &quot;查询当前六维力传感器得到的力和力矩信息：Fx,Fy,Fz,Mx,My,Mz\`rm_get_force_data()\`&quot;">​</a></h2><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tuple[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dict[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]] Robotic_Arm.rm_robot_interface.Force.rm_get_force_data(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li><strong>返回值:</strong> tuple[int, dict[str,any]]: 包含两个元素的元组</li></ul><ol><li>int: 函数执行的状态码</li></ol><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">成功</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">控制器返回false，参数错误或机械臂状态发生错误。</td></tr><tr><td style="text-align:left;">-1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据发送失败，通信过程中出现问题。</td></tr><tr><td style="text-align:left;">-2</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据接收失败，通信过程中出现问题或者控制器长久没有返回。</td></tr><tr><td style="text-align:left;">-3</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">返回值解析失败，接收到的数据格式不正确或不完整。</td></tr></tbody></table><ol start="2"><li>六维力数据字典 | 参数 | 类型 | 说明 | | :--- | :--- | :---| | rm_force_data_t | <code>dict[str, any]</code> | 六维力数据字典，键为rm_force_data_t结构体的字段名称 |</li></ol><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 实例化RoboticArm类</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoboticArm(rm_thread_mode_e.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RM_TRIPLE_MODE_E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建机械臂连接，打印连接id</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_create_robot_arm(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.1.18&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_get_force_data())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm.rm_delete_robot_arm()</span></span></code></pre></div><h2 id="将六维力数据清零-标定当前状态下的零位rm-clear-force-data" tabindex="-1">将六维力数据清零，标定当前状态下的零位<code>rm_clear_force_data()</code> <a class="header-anchor" href="#将六维力数据清零-标定当前状态下的零位rm-clear-force-data" aria-label="Permalink to &quot;将六维力数据清零，标定当前状态下的零位\`rm_clear_force_data()\`&quot;">​</a></h2><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface.Force.rm_clear_force_data (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li><strong>返回值:</strong> 函数执行的状态码</li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">成功</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">控制器返回false，参数错误或机械臂状态发生错误。</td></tr><tr><td style="text-align:left;">-1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据发送失败，通信过程中出现问题。</td></tr><tr><td style="text-align:left;">-2</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据接收失败，通信过程中出现问题或者控制器长久没有返回。</td></tr><tr><td style="text-align:left;">-3</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">返回值解析失败，接收到的数据格式不正确或不完整。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 实例化RoboticArm类</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoboticArm(rm_thread_mode_e.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RM_TRIPLE_MODE_E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建机械臂连接，打印连接id</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_create_robot_arm(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.1.18&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_clear_force_data())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm.rm_delete_robot_arm()</span></span></code></pre></div><h2 id="自动设置六维力重心参数rm-set-force-sensor" tabindex="-1">自动设置六维力重心参数<code>rm_set_force_sensor()</code> <a class="header-anchor" href="#自动设置六维力重心参数rm-set-force-sensor" aria-label="Permalink to &quot;自动设置六维力重心参数\`rm_set_force_sensor()\`&quot;">​</a></h2><blockquote><p>设置六维力重心参数，六维力重新安装后，必须重新计算六维力所受到的初始力和重心。分别在不同姿态下，获取六维力的数据， 用于计算重心位置。该指令下发后，机械臂以固定的速度运动到各标定点。 以RM65机械臂为例，四个标定点的关节角度分别为： 位置1关节角度：{0,0,-60,0,60,0} 位置2关节角度：{0,0,-60,0,-30,0} 位置3关节角度：{0,0,-60,0,-30,180} 位置4关节角度：{0,0,-60,0,-120,0}</p></blockquote><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface.Force.rm_set_force_sensor (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> block)</span></span></code></pre></div><ul><li><strong>参数说明:</strong></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">block</td><td style="text-align:left;"><code>bool</code></td><td style="text-align:left;">true 表示阻塞模式，等待标定完成后返回；false 表示非阻塞模式，发送后立即返回</td></tr></tbody></table><ul><li><strong>返回值:</strong> 函数执行的状态码</li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">成功</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">控制器返回false，参数错误或机械臂状态发生错误。</td></tr><tr><td style="text-align:left;">-1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据发送失败，通信过程中出现问题。</td></tr><tr><td style="text-align:left;">-2</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据接收失败，通信过程中出现问题或者控制器长久没有返回。</td></tr><tr><td style="text-align:left;">-3</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">返回值解析失败，接收到的数据格式不正确或不完整。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 实例化RoboticArm类</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoboticArm(rm_thread_mode_e.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RM_TRIPLE_MODE_E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建机械臂连接，打印连接id</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_create_robot_arm(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.1.18&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_set_force_sensor(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm.rm_delete_robot_arm()</span></span></code></pre></div><h2 id="手动标定六维力数据rm-manual-set-force" tabindex="-1">手动标定六维力数据<code>rm_manual_set_force()</code> <a class="header-anchor" href="#手动标定六维力数据rm-manual-set-force" aria-label="Permalink to &quot;手动标定六维力数据\`rm_manual_set_force()\`&quot;">​</a></h2><p>六维力重新安装后，必须重新计算六维力所受到的初始力和重心。该手动标定流程，适用于空间狭窄工作区域，以防自动标定过程中 机械臂发生碰撞，用户可以手动选取四个位置下发，当下发完四个点后，机械臂开始自动沿用户设置的目标运动，并在此过程中计算六维力重心。</p><blockquote><p><strong>注意</strong> 上述4个位置必须按照顺序依次下发，当下发完位置4后，机械臂开始自动运行计算重心。</p></blockquote><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface.Force.rm_manual_set_force (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> point_num, list[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] joint, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> block)</span></span></code></pre></div><ul><li><strong>参数说明:</strong></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">point_num</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">点位；1~4</td></tr><tr><td style="text-align:left;">joint</td><td style="text-align:left;"><code>list[float]</code></td><td style="text-align:left;">关节角度，单位：°度</td></tr><tr><td style="text-align:left;">block</td><td style="text-align:left;"><code>bool</code></td><td style="text-align:left;">true 表示阻塞模式，等待标定完成后返回；false 表示非阻塞模式，发送后立即返回</td></tr></tbody></table><ul><li><strong>返回值:</strong> 函数执行的状态码</li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">成功</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">控制器返回false，参数错误或机械臂状态发生错误。</td></tr><tr><td style="text-align:left;">-1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据发送失败，通信过程中出现问题。</td></tr><tr><td style="text-align:left;">-2</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据接收失败，通信过程中出现问题或者控制器长久没有返回。</td></tr><tr><td style="text-align:left;">-3</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">返回值解析失败，接收到的数据格式不正确或不完整。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 实例化RoboticArm类</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoboticArm(rm_thread_mode_e.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RM_TRIPLE_MODE_E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建机械臂连接，打印连接id</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_create_robot_arm(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.1.18&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set_force_data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [({</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;point_num&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;joint&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;block&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                       {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;point_num&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;joint&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;block&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                       {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;point_num&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;joint&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;block&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                       {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;point_num&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;joint&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;block&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_manual_set_force(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set_force_data[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time.sleep(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_manual_set_force(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set_force_data[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time.sleep(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_manual_set_force(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set_force_data[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time.sleep(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_manual_set_force(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set_force_data[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time.sleep(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm.rm_delete_robot_arm()</span></span></code></pre></div><h2 id="停止标定力传感器重心rm-stop-set-force-sensor" tabindex="-1">停止标定力传感器重心<code>rm_stop_set_force_sensor()</code> <a class="header-anchor" href="#停止标定力传感器重心rm-stop-set-force-sensor" aria-label="Permalink to &quot;停止标定力传感器重心\`rm_stop_set_force_sensor()\`&quot;">​</a></h2><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface.Force.rm_stop_set_force_sensor	(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li><strong>返回值:</strong> 函数执行的状态码</li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">成功</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">控制器返回false，参数错误或机械臂状态发生错误。</td></tr><tr><td style="text-align:left;">-1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据发送失败，通信过程中出现问题。</td></tr><tr><td style="text-align:left;">-2</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据接收失败，通信过程中出现问题或者控制器长久没有返回。</td></tr><tr><td style="text-align:left;">-3</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">返回值解析失败，接收到的数据格式不正确或不完整。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 实例化RoboticArm类</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoboticArm(rm_thread_mode_e.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RM_TRIPLE_MODE_E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建机械臂连接，打印连接id</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_create_robot_arm(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.1.18&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_stop_set_force_sensor())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm.rm_delete_robot_arm()</span></span></code></pre></div><h2 id="查询末端一维力数据rm-get-fz" tabindex="-1">查询末端一维力数据<code>rm_get_fz()</code> <a class="header-anchor" href="#查询末端一维力数据rm-get-fz" aria-label="Permalink to &quot;查询末端一维力数据\`rm_get_fz()\`&quot;">​</a></h2><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tuple[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dict[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]] Robotic_Arm.rm_robot_interface.Force.rm_get_fz (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li><strong>返回值:</strong> tuple[int, dict[str,any]]: 包含两个元素的元组</li></ul><ol><li>int: 函数执行的状态码</li></ol><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">成功</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">控制器返回false，参数错误或机械臂状态发生错误。</td></tr><tr><td style="text-align:left;">-1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据发送失败，通信过程中出现问题。</td></tr><tr><td style="text-align:left;">-2</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据接收失败，通信过程中出现问题或者控制器长久没有返回。</td></tr><tr><td style="text-align:left;">-3</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">返回值解析失败，接收到的数据格式不正确或不完整。</td></tr></tbody></table><ol start="2"><li>一维力数据词典 | 参数 | 类型 | 说明 | | :--- | :--- | :---| | rm_fz_data_t | <code>dict[str, any]</code> | 一维力数据字典，键为rm_fz_data_t结构体的字段名称 |</li></ol><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 实例化RoboticArm类</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoboticArm(rm_thread_mode_e.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RM_TRIPLE_MODE_E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建机械臂连接，打印连接id</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_create_robot_arm(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.1.18&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_get_fz())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm.rm_delete_robot_arm()</span></span></code></pre></div><h2 id="清零末端一维力数据-清空一维力数据后-后续所有获取到的数据都是基于当前的偏置。rm-clear-fz" tabindex="-1">清零末端一维力数据，清空一维力数据后，后续所有获取到的数据都是基于当前的偏置。<code>rm_clear_fz()</code> <a class="header-anchor" href="#清零末端一维力数据-清空一维力数据后-后续所有获取到的数据都是基于当前的偏置。rm-clear-fz" aria-label="Permalink to &quot;清零末端一维力数据，清空一维力数据后，后续所有获取到的数据都是基于当前的偏置。\`rm_clear_fz()\`&quot;">​</a></h2><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface.Force.rm_clear_fz (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li><strong>返回值:</strong> 函数执行的状态码</li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">成功</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">控制器返回false，参数错误或机械臂状态发生错误。</td></tr><tr><td style="text-align:left;">-1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据发送失败，通信过程中出现问题。</td></tr><tr><td style="text-align:left;">-2</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据接收失败，通信过程中出现问题或者控制器长久没有返回。</td></tr><tr><td style="text-align:left;">-3</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">返回值解析失败，接收到的数据格式不正确或不完整。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 实例化RoboticArm类</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoboticArm(rm_thread_mode_e.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RM_TRIPLE_MODE_E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建机械臂连接，打印连接id</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_create_robot_arm(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.1.18&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_clear_fz())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm.rm_delete_robot_arm()</span></span></code></pre></div><h2 id="自动标定一维力数据rm-auto-set-fz" tabindex="-1">自动标定一维力数据<code>rm_auto_set_fz()</code> <a class="header-anchor" href="#自动标定一维力数据rm-auto-set-fz" aria-label="Permalink to &quot;自动标定一维力数据\`rm_auto_set_fz()\`&quot;">​</a></h2><blockquote><p>设置一维力重心参数，一维力重新安装后，必须重新计算一维力所受到的初始力和重心。 分别在不同姿态下，获取一维力的数据，用于计算重心位置，该步骤对于基于一维力的力位混合控制操作具有重要意义。</p></blockquote><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface.Force.rm_auto_set_fz	(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> block)</span></span></code></pre></div><ul><li><strong>参数说明:</strong></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">block</td><td style="text-align:left;"><code>bool</code></td><td style="text-align:left;">true 表示阻塞模式，等待标定完成后返回；false 表示非阻塞模式，发送后立即返回。</td></tr></tbody></table><ul><li><strong>返回值:</strong> 函数执行的状态码</li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">成功</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">控制器返回false，参数错误或机械臂状态发生错误。</td></tr><tr><td style="text-align:left;">-1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据发送失败，通信过程中出现问题。</td></tr><tr><td style="text-align:left;">-2</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据接收失败，通信过程中出现问题或者控制器长久没有返回。</td></tr><tr><td style="text-align:left;">-3</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">返回值解析失败，接收到的数据格式不正确或不完整。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 实例化RoboticArm类</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoboticArm(rm_thread_mode_e.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RM_TRIPLE_MODE_E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建机械臂连接，打印连接id</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_create_robot_arm(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.1.18&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_auto_set_fz(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm.rm_delete_robot_arm()</span></span></code></pre></div><h2 id="手动标定一维力数据rm-manual-set-fz" tabindex="-1">手动标定一维力数据<code>rm_manual_set_fz()</code> <a class="header-anchor" href="#手动标定一维力数据rm-manual-set-fz" aria-label="Permalink to &quot;手动标定一维力数据\`rm_manual_set_fz()\`&quot;">​</a></h2><blockquote><p>设置一维力重心参数，一维力重新安装后，必须重新计算一维力所受到的初始力和重心。该手动标定流程， 适用于空间狭窄工作区域，以防自动标定过程中机械臂发生碰撞，用户可以手动选取2个位置下发，当下发完后， 机械臂开始自动沿用户设置的目标运动，并在此过程中计算一维力重心。</p></blockquote><ul><li><strong>方法原型：</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface.Force.rm_manual_set_fz	(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> block)</span></span></code></pre></div><ul><li><strong>参数说明:</strong></li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">joint1</td><td style="text-align:left;"><code>list[float]</code></td><td style="text-align:left;">位置1关节角度数组，单位：度</td></tr><tr><td style="text-align:left;">joint2</td><td style="text-align:left;"><code>list[float]</code></td><td style="text-align:left;">位置2关节角度数组，单位：度</td></tr><tr><td style="text-align:left;">block</td><td style="text-align:left;"><code>bool</code></td><td style="text-align:left;">true 表示阻塞模式，等待标定完成后返回；false 表示非阻塞模式，发送后立即返回。</td></tr></tbody></table><ul><li><strong>返回值:</strong> 函数执行的状态码</li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">0</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">成功</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">控制器返回false，参数错误或机械臂状态发生错误。</td></tr><tr><td style="text-align:left;">-1</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据发送失败，通信过程中出现问题。</td></tr><tr><td style="text-align:left;">-2</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">数据接收失败，通信过程中出现问题或者控制器长久没有返回。</td></tr><tr><td style="text-align:left;">-3</td><td style="text-align:left;"><code>int</code></td><td style="text-align:left;">返回值解析失败，接收到的数据格式不正确或不完整。</td></tr></tbody></table><ul><li><strong>使用示例</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Robotic_Arm.rm_robot_interface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 实例化RoboticArm类</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RoboticArm(rm_thread_mode_e.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RM_TRIPLE_MODE_E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建机械臂连接，打印连接id</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_create_robot_arm(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.1.18&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arm.rm_manual_set_fz([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">arm.rm_delete_robot_arm()</span></span></code></pre></div>`,88),n=[e];function h(p,k,d,r,o,E){return i(),t("div",null,n)}const c=s(l,[["render",h]]);export{y as __pageData,c as default};

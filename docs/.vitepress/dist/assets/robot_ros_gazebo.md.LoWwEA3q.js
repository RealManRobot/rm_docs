import{_ as a,c as n,o as s,a3 as p}from"./chunks/framework.DpFyhY0e.js";const h=JSON.parse('{"title":"1.rm_gazebo功能包说明","description":"","frontmatter":{},"headers":[],"relativePath":"robot/ros/gazebo.md","filePath":"robot/ros/gazebo.md","lastUpdated":null}'),e={name:"robot/ros/gazebo.md"},l=p(`<h1 id="_1-rm-gazebo功能包说明" tabindex="-1">1.rm_gazebo功能包说明 <a class="header-anchor" href="#_1-rm-gazebo功能包说明" aria-label="Permalink to &quot;1.rm\\_gazebo功能包说明&quot;">​</a></h1><p>rm_gazebo的主要作用为帮助我们实现机械臂Moveit规划的仿真功能，我们将在gazebo的仿真环境中搭建一个虚拟机械臂，然后通过Moveit控制gazebo中的虚拟机械臂，在下文中将通过以下几个方面详细介绍该功能包。</p><ol><li>功能包使用。</li><li>功能包架构说明。</li></ol><p>通过这部分内容的介绍可以帮助大家：</p><ol><li>了解该功能包的使用。</li><li>熟悉功能包中的文件构成及作用。</li></ol><p>源码地址：<a href="https://github.com/RealManRobot/rm_robot/tree/main/rm_gazebo%E3%80%82" target="_blank" rel="noreferrer">https://github.com/RealManRobot/rm_robot/tree/main/rm_gazebo。</a></p><h1 id="_2-rm-gazebo功能包运行" tabindex="-1">2.rm_gazebo功能包运行 <a class="header-anchor" href="#_2-rm-gazebo功能包运行" aria-label="Permalink to &quot;2.rm\\_gazebo功能包运行&quot;">​</a></h1><h2 id="_2-1控制仿真机械臂" tabindex="-1">2.1控制仿真机械臂 <a class="header-anchor" href="#_2-1控制仿真机械臂" aria-label="Permalink to &quot;2.1控制仿真机械臂&quot;">​</a></h2><p>在完成环境安装和功能包安装后，我们可以进行rm_gazebo功能包的运行。</p><p>在运行之前首先我们需要修改有关配置文件，找到如下路径中的rm_&lt;arm_type&gt;_moveit_controller_manager.launch.xml文件，将下方的红框代码取消注释，注释之前的yaml加载代码。</p><p><img src="https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/Pd6l2YkePP4NO7Ma/img/be75baa9-494d-437a-9833-cdf5794fd3f3.png" alt="image.png"></p><p>完成上面操作后，使用如下指令启动gazebo虚拟空间和虚拟机械臂。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>rm@rm-desktop:~$ roslaunch rm_gazebo arm_&lt;arm_type&gt;_bringup_moveit.launch</span></span></code></pre></div><p>运行成功后将弹出如下界面。</p><p><img src="https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/Pd6l2YkePP4NO7Ma/img/5d6e47c5-1a21-43a0-84ff-3c0cb887dd08.png" alt="image.png"></p><p>弹出rviz的控制界面后就可以进行Moveit和gazebo的仿真控制了。</p><p><img src="https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/Pd6l2YkePP4NO7Ma/img/7a690926-e620-4cb9-a915-ed0f96b1bfe4.png" alt="image.png"></p><h1 id="_3-rm-gazebo功能包架构说明" tabindex="-1">3.rm_gazebo功能包架构说明 <a class="header-anchor" href="#_3-rm-gazebo功能包架构说明" aria-label="Permalink to &quot;3.rm\\_gazebo功能包架构说明&quot;">​</a></h1><h2 id="_3-1功能包文件总览" tabindex="-1">3.1功能包文件总览 <a class="header-anchor" href="#_3-1功能包文件总览" aria-label="Permalink to &quot;3.1功能包文件总览&quot;">​</a></h2><p>当前rm_gazebo功能包的文件构成如下。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    ├── CMakeLists.txt                         #编译规则文件</span></span>
<span class="line"><span>    ├── config</span></span>
<span class="line"><span>    │   ├── ECO65                            #ECO65的仿真配置文件</span></span>
<span class="line"><span>    │   │   ├── arm_gazebo_control.yaml</span></span>
<span class="line"><span>    │   │   ├── arm_gazebo_joint_states.yam     #关节状态控制器</span></span>
<span class="line"><span>    │   │   ├── rm_eco65_trajectory_control.yaml  #关节控制器</span></span>
<span class="line"><span>    │   │   └── trajectory_control.yaml</span></span>
<span class="line"><span>    │   ├── RM65                              #同ECO65的仿真配置文件</span></span>
<span class="line"><span>    │   │   ├── arm_gazebo_control.yaml</span></span>
<span class="line"><span>    │   │   ├── arm_gazebo_joint_states.yaml</span></span>
<span class="line"><span>    │   │   ├── rm_65_trajectory_control.yaml</span></span>
<span class="line"><span>    │   │   ├── rviz_gazebo.rviz</span></span>
<span class="line"><span>    │   │   └── trajectory_control.yaml</span></span>
<span class="line"><span>    │   ├── RM75                              #同ECO65的仿真配置文件</span></span>
<span class="line"><span>    │   │   ├── arm_gazebo_control.yaml</span></span>
<span class="line"><span>    │   │   ├── arm_gazebo_joint_states.yaml</span></span>
<span class="line"><span>    │   │   ├── rm_75_trajectory_control.yaml</span></span>
<span class="line"><span>    │   │   ├── rviz_gazebo_bak.rviz</span></span>
<span class="line"><span>    │   │   ├── rviz_gazebo.rviz</span></span>
<span class="line"><span>    │   │   └── trajectory_control.yaml</span></span>
<span class="line"><span>    │   └── RML63                              #同ECO65的仿真配置文件</span></span>
<span class="line"><span>    │       ├── arm_gazebo_control.yaml</span></span>
<span class="line"><span>    │       ├── arm_gazebo_joint_states.yaml</span></span>
<span class="line"><span>    │       ├── rml_63_trajectory_control.yaml</span></span>
<span class="line"><span>    │       ├── rviz_gazebo.rviz</span></span>
<span class="line"><span>    │       └── trajectory_control.yaml</span></span>
<span class="line"><span>    ├── launch</span></span>
<span class="line"><span>    │   ├── arm_63_bringup_moveit.launch             #RML63仿真gazebo启动文件</span></span>
<span class="line"><span>    │   ├── arm_65_bringup_moveit.launch             # RM65仿真gazebo启动文件</span></span>
<span class="line"><span>    │   ├── arm_75_bringup_moveit.launch             # RM75仿真gazebo启动文件</span></span>
<span class="line"><span>    │   ├── arm_eco65_bringup_moveit.launch          # ECO65仿真gazebo启动文件</span></span>
<span class="line"><span>    │   ├── ECO65                                  # ECO65相关启动文件</span></span>
<span class="line"><span>    │   │   ├── arm_eco65_trajectory_controller.launch   #仿真控制器launch文件</span></span>
<span class="line"><span>    │   │   ├── rm_eco65_arm_gazebo_states.launch    #仿真机械臂状态监控launch文件</span></span>
<span class="line"><span>    │   │   ├── rm_eco65_arm_trajectory_controller.launch</span></span>
<span class="line"><span>    │   │   └── rm_eco65_arm_world.launch       #仿真机械臂gazebo加载launch文件</span></span>
<span class="line"><span>    │   ├── RM65                              # RM65gazebo相关启动文件(同eco65)</span></span>
<span class="line"><span>    │   │   ├── arm_65_trajectory_controller.launch</span></span>
<span class="line"><span>    │   │   ├── rm_65_arm_gazebo_states.launch</span></span>
<span class="line"><span>    │   │   ├── rm_65_arm_trajectory_controller.launch</span></span>
<span class="line"><span>    │   │   └── rm_65_arm_world.launch</span></span>
<span class="line"><span>    │   ├── RM75                              # RM75gazebo相关启动文件(同eco65)</span></span>
<span class="line"><span>    │   │   ├── arm_75_trajectory_controller.launch</span></span>
<span class="line"><span>    │   │   ├── arm_gazebo_states.launch</span></span>
<span class="line"><span>    │   │   ├── arm_trajectory_controller.launch</span></span>
<span class="line"><span>    │   │   └── arm_world.launch</span></span>
<span class="line"><span>    │   └── RML63                             # RML63gazebo相关启动文件(同eco65)</span></span>
<span class="line"><span>    │       ├── arm_gazebo_states.launch</span></span>
<span class="line"><span>    │       ├── arm_trajectory_controller.launch</span></span>
<span class="line"><span>    │       ├── arm_world.launch</span></span>
<span class="line"><span>    │       └── rml_63_trajectory_controller.launch</span></span>
<span class="line"><span>    └── package.xml</span></span></code></pre></div>`,21),o=[l];function r(t,c,i,_,m,g){return s(),n("div",null,o)}const d=a(e,[["render",r]]);export{h as __pageData,d as default};
